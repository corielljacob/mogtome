@using Blazored.LocalStorage
@inject IJSRuntime JS

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">MogTome</a>
        <button @onclick="ToggleDarkMode" class="dark-mode-toggle">
            <img src="white_moon.svg" alt="Toggle dark mode" />
        </button>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="members">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Members
            </NavLink>
        </div>
    </nav>
    
</div>

<script>
    function enableDarkMode() {
        document.body.classList.add('dark-mode');
    }

    function disableDarkMode() {
        document.body.classList.remove('dark-mode');
    }
</script>

@code {
    [Inject]
    private ILocalStorageService localStorage { get; set; }
    private bool DarkModeEnabled = false;

    private async Task ToggleDarkMode()
    {
        var darkModeEnabled = await localStorage.GetItemAsync<string>("darkModeEnabled");

        if(string.IsNullOrEmpty(darkModeEnabled))
        {
            await localStorage.SetItemAsync<string>("darkModeEnabled", "true");
            await JS.InvokeVoidAsync("enableDarkMode");
        }
        else
        {
            if(bool.Parse(darkModeEnabled))
            {
                await localStorage.SetItemAsync<string>("darkModeEnabled", "false");
                await JS.InvokeVoidAsync("disableDarkMode");
            }
            else
            {
                await localStorage.SetItemAsync<string>("darkModeEnabled", "true");
                await JS.InvokeVoidAsync("enableDarkMode");
            }
        }
    }
}
